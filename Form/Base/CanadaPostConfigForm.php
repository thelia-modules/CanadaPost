<?php
/**
* This class has been generated by TheliaStudio
* For more information, see https://github.com/thelia-modules/TheliaStudio
*/

namespace CanadaPost\Form\Base;

use CanadaPost\CanadaPost;
use Thelia\Form\BaseForm;
use CanadaPost\Model\Config\CanadaPostConfigValue;
use Symfony\Component\Validator\Constraints\NotBlank;

/**
 * Class CanadaPostConfigForm
 * @package CanadaPost\Form\Base
 * @author TheliaStudio
 */
class CanadaPostConfigForm extends BaseForm
{
    const FORM_NAME = "canadapost_config_form";

    /**
     *
     * in this function you add all the fields you need for your Form.
     * Form this you have to call add method on $this->formBuilder attribute :
     *
     * $this->formBuilder->add("name", "text")
     *   ->add("email", "email", array(
     *           "attr" => array(
     *               "class" => "field"
     *           ),
     *           "label" => "email",
     *           "constraints" => array(
     *               new \Symfony\Component\Validator\Constraints\NotBlank()
     *           )
     *       )
     *   )
     *   ->add('age', 'integer');
     *
     * @return null
     */
    protected function buildForm()
    {
        $translationKeys = $this->getTranslationKeys();
        $fieldsIdKeys = $this->getFieldsIdKeys();

        $this->addEnabledField($translationKeys, $fieldsIdKeys);
        $this->addModeProductionField($translationKeys, $fieldsIdKeys);
        $this->addCustomerNumberField($translationKeys, $fieldsIdKeys);
        $this->addUsernameField($translationKeys, $fieldsIdKeys);
        $this->addPasswordField($translationKeys, $fieldsIdKeys);
        $this->addTestUsernameField($translationKeys, $fieldsIdKeys);
        $this->addTestPasswordField($translationKeys, $fieldsIdKeys);
        $this->addQuoteTypeCommercialField($translationKeys, $fieldsIdKeys);
        $this->addContractIdField($translationKeys, $fieldsIdKeys);
        $this->addInsuranceField($translationKeys, $fieldsIdKeys);
        $this->addOriginPostalcodeField($translationKeys, $fieldsIdKeys);
        $this->addDisallowedServicesField($translationKeys, $fieldsIdKeys);
    }

    protected function addEnabledField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("enabled", "checkbox", array(
                "label" => $this->readKey("enabled", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("enabled", $fieldsIdKeys),
                    "help" => $this->readKey("help.enabled", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => CanadaPost::getConfigValue(CanadaPostConfigValue::ENABLED, false),
            ))
        ;
    }

    protected function addModeProductionField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("mode_production", "checkbox", array(
                "label" => $this->readKey("mode_production", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("mode_production", $fieldsIdKeys),
                    "help" => $this->readKey("help.mode_production", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => CanadaPost::getConfigValue(CanadaPostConfigValue::MODE_PRODUCTION, false),
            ))
        ;
    }

    protected function addCustomerNumberField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("customer_number", "text", array(
                "label" => $this->readKey("customer_number", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("customer_number", $fieldsIdKeys),
                    "help" => $this->readKey("help.customer_number", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::CUSTOMER_NUMBER),
            ))
        ;
    }

    protected function addUsernameField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("username", "text", array(
                "label" => $this->readKey("username", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("username", $fieldsIdKeys),
                    "help" => $this->readKey("help.username", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::USERNAME),
            ))
        ;
    }

    protected function addPasswordField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("password", "text", array(
                "label" => $this->readKey("password", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("password", $fieldsIdKeys),
                    "help" => $this->readKey("help.password", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::PASSWORD),
            ))
        ;
    }

    protected function addTestUsernameField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("test_username", "text", array(
                "label" => $this->readKey("test_username", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("test_username", $fieldsIdKeys),
                    "help" => $this->readKey("help.test_username", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::TEST_USERNAME),
            ))
        ;
    }

    protected function addTestPasswordField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("test_password", "text", array(
                "label" => $this->readKey("test_password", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("test_password", $fieldsIdKeys),
                    "help" => $this->readKey("help.test_password", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::TEST_PASSWORD),
            ))
        ;
    }

    protected function addQuoteTypeCommercialField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("quote_type_commercial", "checkbox", array(
                "label" => $this->readKey("quote_type_commercial", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("quote_type_commercial", $fieldsIdKeys),
                    "help" => $this->readKey("help.quote_type_commercial", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => CanadaPost::getConfigValue(CanadaPostConfigValue::QUOTE_TYPE_COMMERCIAL, false),
            ))
        ;
    }

    protected function addContractIdField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("contract_id", "text", array(
                "label" => $this->readKey("contract_id", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("contract_id", $fieldsIdKeys),
                    "help" => $this->readKey("help.contract_id", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::CONTRACT_ID),
            ))
        ;
    }

    protected function addInsuranceField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("insurance", "checkbox", array(
                "label" => $this->readKey("insurance", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("insurance", $fieldsIdKeys),
                    "help" => $this->readKey("help.insurance", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => CanadaPost::getConfigValue(CanadaPostConfigValue::INSURANCE, false),
            ))
        ;
    }

    protected function addOriginPostalcodeField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("origin_postalcode", "text", array(
                "label" => $this->readKey("origin_postalcode", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("origin_postalcode", $fieldsIdKeys),
                    "help" => $this->readKey("help.origin_postalcode", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::ORIGIN_POSTALCODE),
            ))
        ;
    }

    protected function addDisallowedServicesField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("disallowed_services", "text", array(
                "label" => $this->readKey("disallowed_services", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("disallowed_services", $fieldsIdKeys),
                    "help" => $this->readKey("help.disallowed_services", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => CanadaPost::getConfigValue(CanadaPostConfigValue::DISALLOWED_SERVICES),
            ))
        ;
    }

    public function getName()
    {
        return static::FORM_NAME;
    }

    public function readKey($key, array $keys, $default = '')
    {
        if (isset($keys[$key])) {
            return $keys[$key];
        }

        return $default;
    }

    public function getTranslationKeys()
    {
        return array();
    }

    public function getFieldsIdKeys()
    {
        return array(
            "enabled" => "enabled",
            "mode_production" => "mode_production",
            "customer_number" => "customer_number",
            "username" => "username",
            "password" => "password",
            "test_username" => "test_username",
            "test_password" => "test_password",
            "quote_type_commercial" => "quote_type_commercial",
            "contract_id" => "contract_id",
            "insurance" => "insurance",
            "origin_postalcode" => "origin_postalcode",
            "disallowed_services" => "disallowed_services",
        );
    }
}
